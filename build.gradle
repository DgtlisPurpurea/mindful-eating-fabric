plugins {
	id 'fabric-loom' version '1.10.5'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
		url "https://cursemaven.com"
	}
	maven {
		name = "Fuzs Mod Resources"
		url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
	}
	maven {
		name = 'Illusive Soulworks'
		url = 'https://maven.theillusivec4.top/'
	}
	maven {
		name = 'Ladysnake Mods'
		url = 'https://maven.ladysnake.org/releases'
	}
	maven { url = "https://maven.shedaniel.me/" }
	maven { url = "https://api.modrinth.com/maven" }
	maven { url = "https://maven.ryanliptak.com/" }
	maven { url = "https://maven.wispforest.io/" }
	maven { url = "https://maven.terraformersmc.com/" }
	maven { url = "https://maven.blamejared.com/" }
	maven { url = "https://mvn.devos.one/snapshots/" } // Registrate, Porting Lib, Forge Tags, Milk Lib
    maven { url = "https://mvn.devos.one/releases/" }
    maven { // for Porting Lib: Fabric ASM
        url = "https://jitpack.io/"
	}
	maven { // Reach Entity Attributes
        url = "https://maven.jamieswhiteshirt.com/libs-release"
        content { includeGroup("com.jamieswhiteshirt") }
    }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
	modImplementation "fuzs.forgeconfigapiport:forgeconfigapiport-fabric:${project.forge_config_api}"
	modImplementation "curse.maven:diet-443570:4813902"
	modImplementation group: 'com.illusivesoulworks.spectrelib', name: 'spectrelib-fabric', version: "${spectrelib_range}"
	modImplementation "maven.modrinth:farmers-delight-refabricated:${project.delight_version}"
	modCompileOnly("squeek.appleskin:appleskin-fabric:${appleskin_version}:api") {
		transitive = false
	}
	modCompileOnly("squeek.appleskin:appleskin-fabric:${appleskin_version}") {
		transitive = false
	}
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${cca_version}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${cca_version}"

    include(modImplementation("com.github.Chocohead:Fabric-ASM:${fabric_asm_version}")) {
        exclude (group: "net.fabricmc.fabric-api")
    }

    for (String module in port_lib_modules.split(",")) {
        include(modApi("io.github.fabricators_of_create.Porting-Lib:$module:$port_lib_version"))
    }
}

loom {
	accessWidenerPath = file("src/main/resources/mindful_eating.accesswidener")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}